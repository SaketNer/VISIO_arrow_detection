[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x57a0 bytes. 0x2860 bytes (32%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable person_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
[9/10] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/partition_table/partition-table.bin /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
person_detection.bin binary size 0x20a960 bytes. Smallest app partition is 0x3a0000 bytes. 0x1956a0 bytes (44%) free.
[9/10] cd /Users/saket/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.3/bin/cmake -D IDF_PATH=/Users/saket/esp/esp-idf -D "SERIAL_TOOL=/Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/saket/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build -P /Users/saket/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem11301 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/cu.usbmodem11301
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 48:27:e2:f0:32:a0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0021afff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 22432 bytes to 14249...
Writing at 0x00000000... (100 %)
Wrote 22432 bytes (14249 compressed) at 0x00000000 in 0.4 seconds (effective 466.1 kbit/s)...
Hash of data verified.
Compressed 2140512 bytes to 1414091...
Writing at 0x00010000... (1 %)
Writing at 0x00018c72... (2 %)
Writing at 0x0001d7e5... (3 %)
Writing at 0x00026fbb... (4 %)
Writing at 0x0002b3ea... (5 %)
Writing at 0x0002f8dd... (6 %)
Writing at 0x00033ddb... (8 %)
Writing at 0x00038204... (9 %)
Writing at 0x0003c61a... (10 %)
Writing at 0x00040a97... (11 %)
Writing at 0x00044ce1... (12 %)
Writing at 0x000492b9... (13 %)
Writing at 0x0004d652... (14 %)
Writing at 0x00051b31... (16 %)
Writing at 0x00055fbb... (17 %)
Writing at 0x0005a22c... (18 %)
Writing at 0x0005e6af... (19 %)
Writing at 0x00062b51... (20 %)
Writing at 0x00066fc8... (21 %)
Writing at 0x0006b33f... (22 %)
Writing at 0x0006f624... (24 %)
Writing at 0x0007398f... (25 %)
Writing at 0x00077cc9... (26 %)
Writing at 0x0007bfe2... (27 %)
Writing at 0x000802f5... (28 %)
Writing at 0x00084685... (29 %)
Writing at 0x00088aa8... (31 %)
Writing at 0x0008d879... (32 %)
Writing at 0x0009959e... (33 %)
Writing at 0x000a6c82... (34 %)
Writing at 0x000b39c6... (35 %)
Writing at 0x000c060a... (36 %)
Writing at 0x000c95f0... (37 %)
Writing at 0x000d4133... (39 %)
Writing at 0x000debe0... (40 %)
Writing at 0x000e3ba9... (41 %)
Writing at 0x000ebd1e... (42 %)
Writing at 0x000ff3dd... (43 %)
Writing at 0x00105122... (44 %)
Writing at 0x0010ac25... (45 %)
Writing at 0x0010ffb1... (47 %)
Writing at 0x00114d2c... (48 %)
Writing at 0x00119f52... (49 %)
Writing at 0x0011ee74... (50 %)
Writing at 0x0012578d... (51 %)
Writing at 0x0012b3d1... (52 %)
Writing at 0x00130554... (54 %)
Writing at 0x00135389... (55 %)
Writing at 0x0013a961... (56 %)
Writing at 0x0013f886... (57 %)
Writing at 0x001461f3... (58 %)
Writing at 0x0014b2e5... (59 %)
Writing at 0x001503f7... (60 %)
Writing at 0x00155d5b... (62 %)
Writing at 0x0015b545... (63 %)
Writing at 0x00160d92... (64 %)
Writing at 0x00166492... (65 %)
Writing at 0x0016ba3e... (66 %)
Writing at 0x00170a7f... (67 %)
Writing at 0x00175b2d... (68 %)
Writing at 0x0017ac4a... (70 %)
Writing at 0x0017ff49... (71 %)
Writing at 0x001851d1... (72 %)
Writing at 0x0018a46d... (73 %)
Writing at 0x00190381... (74 %)
Writing at 0x001952a3... (75 %)
Writing at 0x0019a2be... (77 %)
Writing at 0x0019f181... (78 %)
Writing at 0x001a4174... (79 %)
Writing at 0x001a9134... (80 %)
Writing at 0x001adfd6... (81 %)
Writing at 0x001b348e... (82 %)
Writing at 0x001b89d3... (83 %)
Writing at 0x001bef82... (85 %)
Writing at 0x001c8ed1... (86 %)
Writing at 0x001d022b... (87 %)
Writing at 0x001d8b80... (88 %)
Writing at 0x001de0b0... (89 %)
Writing at 0x001e44d9... (90 %)
Writing at 0x001ec8d6... (91 %)
Writing at 0x001f2ec5... (93 %)
Writing at 0x001fb2af... (94 %)
Writing at 0x0020204d... (95 %)
Writing at 0x0020857f... (96 %)
Writing at 0x0020dea2... (97 %)
Writing at 0x0021354a... (98 %)
Writing at 0x002189c1... (100 %)
Wrote 2140512 bytes (1414091 compressed) at 0x00010000 in 14.8 seconds (effective 1156.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 479.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
