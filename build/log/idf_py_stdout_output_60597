[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x57a0 bytes. 0x2860 bytes (32%) free.
[2/10] No install step for 'bootloader'
[3/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable person_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
[9/10] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/partition_table/partition-table.bin /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
person_detection.bin binary size 0x20a970 bytes. Smallest app partition is 0x3a0000 bytes. 0x195690 bytes (44%) free.
[9/10] cd /Users/saket/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.3/bin/cmake -D IDF_PATH=/Users/saket/esp/esp-idf -D "SERIAL_TOOL=/Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/saket/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build -P /Users/saket/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem11301 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/cu.usbmodem11301
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 48:27:e2:f0:32:a0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0021afff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 22432 bytes to 14249...
Writing at 0x00000000... (100 %)
Wrote 22432 bytes (14249 compressed) at 0x00000000 in 0.4 seconds (effective 476.0 kbit/s)...
Hash of data verified.
Compressed 2140528 bytes to 1414167...
Writing at 0x00010000... (1 %)
Writing at 0x00018c6a... (2 %)
Writing at 0x0001d7e4... (3 %)
Writing at 0x00026fb9... (4 %)
Writing at 0x0002b3e7... (5 %)
Writing at 0x0002f8da... (6 %)
Writing at 0x00033dd8... (8 %)
Writing at 0x00038201... (9 %)
Writing at 0x0003c618... (10 %)
Writing at 0x00040a94... (11 %)
Writing at 0x00044cde... (12 %)
Writing at 0x000492b6... (13 %)
Writing at 0x0004d650... (14 %)
Writing at 0x00051b2e... (16 %)
Writing at 0x00055fb8... (17 %)
Writing at 0x0005a229... (18 %)
Writing at 0x0005e6ad... (19 %)
Writing at 0x00062b4e... (20 %)
Writing at 0x00066fc5... (21 %)
Writing at 0x0006b33d... (22 %)
Writing at 0x0006f622... (24 %)
Writing at 0x0007398c... (25 %)
Writing at 0x00077cc7... (26 %)
Writing at 0x0007bfe0... (27 %)
Writing at 0x000802f3... (28 %)
Writing at 0x00084683... (29 %)
Writing at 0x00088aa5... (31 %)
Writing at 0x0008d877... (32 %)
Writing at 0x0009959c... (33 %)
Writing at 0x000a6c80... (34 %)
Writing at 0x000b39c4... (35 %)
Writing at 0x000c0609... (36 %)
Writing at 0x000c95ef... (37 %)
Writing at 0x000d4132... (39 %)
Writing at 0x000debdd... (40 %)
Writing at 0x000e3baa... (41 %)
Writing at 0x000ebd1e... (42 %)
Writing at 0x000ff3b5... (43 %)
Writing at 0x00105104... (44 %)
Writing at 0x0010abcf... (45 %)
Writing at 0x0010ff8a... (47 %)
Writing at 0x00114cfc... (48 %)
Writing at 0x00119f17... (49 %)
Writing at 0x0011ee42... (50 %)
Writing at 0x00125727... (51 %)
Writing at 0x0012b39b... (52 %)
Writing at 0x00130529... (54 %)
Writing at 0x00135361... (55 %)
Writing at 0x0013a938... (56 %)
Writing at 0x0013f860... (57 %)
Writing at 0x001461c9... (58 %)
Writing at 0x0014b26b... (59 %)
Writing at 0x001503c2... (60 %)
Writing at 0x00155d2d... (62 %)
Writing at 0x0015b50a... (63 %)
Writing at 0x00160d49... (64 %)
Writing at 0x0016642c... (65 %)
Writing at 0x0016b9e8... (66 %)
Writing at 0x00170a41... (67 %)
Writing at 0x00175acc... (68 %)
Writing at 0x0017ac0c... (70 %)
Writing at 0x0017fef2... (71 %)
Writing at 0x0018518f... (72 %)
Writing at 0x0018a41c... (73 %)
Writing at 0x00190346... (74 %)
Writing at 0x0019525a... (75 %)
Writing at 0x0019a257... (77 %)
Writing at 0x0019f14d... (78 %)
Writing at 0x001a4135... (79 %)
Writing at 0x001a90f2... (80 %)
Writing at 0x001adf96... (81 %)
Writing at 0x001b3447... (82 %)
Writing at 0x001b898e... (83 %)
Writing at 0x001bef21... (85 %)
Writing at 0x001c8e7d... (86 %)
Writing at 0x001d01e1... (87 %)
Writing at 0x001d8b39... (88 %)
Writing at 0x001de06f... (89 %)
Writing at 0x001e4493... (90 %)
Writing at 0x001ec895... (91 %)
Writing at 0x001f2e86... (93 %)
Writing at 0x001fb261... (94 %)
Writing at 0x00202006... (95 %)
Writing at 0x00208532... (96 %)
Writing at 0x0020de31... (97 %)
Writing at 0x002134f7... (98 %)
Writing at 0x00218976... (100 %)
Wrote 2140528 bytes (1414167 compressed) at 0x00010000 in 14.8 seconds (effective 1157.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 481.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
