[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x57a0 bytes. 0x2860 bytes (32%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cc.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable person_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
[9/10] cd /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/esp-idf/esptool_py && /Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/saket/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/partition_table/partition-table.bin /Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build/person_detection.bin
person_detection.bin binary size 0x20a970 bytes. Smallest app partition is 0x3a0000 bytes. 0x195690 bytes (44%) free.
[9/10] cd /Users/saket/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.3/bin/cmake -D IDF_PATH=/Users/saket/esp/esp-idf -D "SERIAL_TOOL=/Users/saket/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/saket/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/saket/devlopment/v3-FOMO+CLASSIFICATION-working/esp-tflite-micro/examples/person_detection/build -P /Users/saket/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem11301 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/cu.usbmodem11301
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 48:27:e2:f0:32:a0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0021afff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 22432 bytes to 14249...
Writing at 0x00000000... (100 %)
Wrote 22432 bytes (14249 compressed) at 0x00000000 in 0.4 seconds (effective 466.1 kbit/s)...
Hash of data verified.
Compressed 2140528 bytes to 1414168...
Writing at 0x00010000... (1 %)
Writing at 0x00018c6f... (2 %)
Writing at 0x0001d7e5... (3 %)
Writing at 0x00026fba... (4 %)
Writing at 0x0002b3e8... (5 %)
Writing at 0x0002f8db... (6 %)
Writing at 0x00033dd9... (8 %)
Writing at 0x00038202... (9 %)
Writing at 0x0003c619... (10 %)
Writing at 0x00040a96... (11 %)
Writing at 0x00044ce0... (12 %)
Writing at 0x000492b8... (13 %)
Writing at 0x0004d651... (14 %)
Writing at 0x00051b30... (16 %)
Writing at 0x00055fba... (17 %)
Writing at 0x0005a22b... (18 %)
Writing at 0x0005e6ae... (19 %)
Writing at 0x00062b50... (20 %)
Writing at 0x00066fc7... (21 %)
Writing at 0x0006b33e... (22 %)
Writing at 0x0006f623... (24 %)
Writing at 0x0007398e... (25 %)
Writing at 0x00077cc8... (26 %)
Writing at 0x0007bfe1... (27 %)
Writing at 0x000802f5... (28 %)
Writing at 0x00084684... (29 %)
Writing at 0x00088aa5... (31 %)
Writing at 0x0008d878... (32 %)
Writing at 0x0009959d... (33 %)
Writing at 0x000a6c81... (34 %)
Writing at 0x000b39c5... (35 %)
Writing at 0x000c060a... (36 %)
Writing at 0x000c95f1... (37 %)
Writing at 0x000d4133... (39 %)
Writing at 0x000debde... (40 %)
Writing at 0x000e3bac... (41 %)
Writing at 0x000ebd1e... (42 %)
Writing at 0x000ff3b9... (43 %)
Writing at 0x00105106... (44 %)
Writing at 0x0010abee... (45 %)
Writing at 0x0010ff8f... (47 %)
Writing at 0x00114cfe... (48 %)
Writing at 0x00119f1a... (49 %)
Writing at 0x0011ee46... (50 %)
Writing at 0x0012572a... (51 %)
Writing at 0x0012b39e... (52 %)
Writing at 0x0013052c... (54 %)
Writing at 0x00135363... (55 %)
Writing at 0x0013a939... (56 %)
Writing at 0x0013f863... (57 %)
Writing at 0x001461cc... (58 %)
Writing at 0x0014b278... (59 %)
Writing at 0x001503c5... (60 %)
Writing at 0x00155d30... (62 %)
Writing at 0x0015b510... (63 %)
Writing at 0x00160d4c... (64 %)
Writing at 0x0016642f... (65 %)
Writing at 0x0016b9f1... (66 %)
Writing at 0x00170a43... (67 %)
Writing at 0x00175acf... (68 %)
Writing at 0x0017ac0f... (70 %)
Writing at 0x0017fef7... (71 %)
Writing at 0x00185192... (72 %)
Writing at 0x0018a41f... (73 %)
Writing at 0x00190349... (74 %)
Writing at 0x0019525d... (75 %)
Writing at 0x0019a258... (77 %)
Writing at 0x0019f14d... (78 %)
Writing at 0x001a4136... (79 %)
Writing at 0x001a90f4... (80 %)
Writing at 0x001adf9a... (81 %)
Writing at 0x001b3449... (82 %)
Writing at 0x001b8993... (83 %)
Writing at 0x001bef23... (85 %)
Writing at 0x001c8e81... (86 %)
Writing at 0x001d01e3... (87 %)
Writing at 0x001d8b39... (88 %)
Writing at 0x001de071... (89 %)
Writing at 0x001e4494... (90 %)
Writing at 0x001ec897... (91 %)
Writing at 0x001f2e88... (93 %)
Writing at 0x001fb262... (94 %)
Writing at 0x0020200b... (95 %)
Writing at 0x00208533... (96 %)
Writing at 0x0020de33... (97 %)
Writing at 0x002134f9... (98 %)
Writing at 0x00218977... (100 %)
Wrote 2140528 bytes (1414168 compressed) at 0x00010000 in 14.8 seconds (effective 1159.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 487.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
